[{"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\index.js":"1","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\App.js":"2","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\Sidebar.js":"3","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\SidebarElem.js":"4","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\Home.js":"5","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ExploreContent.js":"6","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\GetWalkSet.js":"7","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\GetWalkSetIp.js":"8","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ButtonA.js":"9","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ButtonLink.js":"10","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\InformationContent.js":"11","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\IpInput.js":"12","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ReplyTable.js":"13","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ReplyTableElement.js":"14","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\MainInput.js":"15","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ScanNetwork.js":"16","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\NetworkInput.js":"17","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ScanNetworkTable.js":"18","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ScanNetworkTableElement.js":"19"},{"size":198,"mtime":1609691967306,"results":"20","hashOfConfig":"21"},{"size":1265,"mtime":1610184087481,"results":"22","hashOfConfig":"21"},{"size":1795,"mtime":1609838162518,"results":"23","hashOfConfig":"21"},{"size":727,"mtime":1609799332569,"results":"24","hashOfConfig":"21"},{"size":2576,"mtime":1609840604153,"results":"25","hashOfConfig":"21"},{"size":481,"mtime":1609840546721,"results":"26","hashOfConfig":"21"},{"size":1852,"mtime":1609841596822,"results":"27","hashOfConfig":"21"},{"size":4099,"mtime":1610040318282,"results":"28","hashOfConfig":"21"},{"size":471,"mtime":1609840329557,"results":"29","hashOfConfig":"21"},{"size":543,"mtime":1609841316173,"results":"30","hashOfConfig":"21"},{"size":969,"mtime":1609942899333,"results":"31","hashOfConfig":"21"},{"size":1680,"mtime":1609936364197,"results":"32","hashOfConfig":"21"},{"size":817,"mtime":1610185922964,"results":"33","hashOfConfig":"21"},{"size":548,"mtime":1610037142905,"results":"34","hashOfConfig":"21"},{"size":3713,"mtime":1610040316811,"results":"35","hashOfConfig":"21"},{"size":1464,"mtime":1610193907494,"results":"36","hashOfConfig":"21"},{"size":1955,"mtime":1610190468471,"results":"37","hashOfConfig":"21"},{"size":1100,"mtime":1610194865326,"results":"38","hashOfConfig":"21"},{"size":829,"mtime":1610189839349,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"qm8adw",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\index.js",[],["84","85"],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\App.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\Sidebar.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\SidebarElem.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\Home.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ExploreContent.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\GetWalkSet.js",["86"],"import React, { useState, useEffect } from \"react\";\r\nimport ButtonLink from \"./ButtonLink\";\r\nimport IpIcon from \"../Images/ip-icon.svg\";\r\n\r\nexport default function GetWalkSet(props) {\r\n    const [valid, setValid] = useState(false);\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (validateIPaddress(input)) setValid(true);\r\n        else setValid(false);\r\n    }, [input]);\r\n\r\n    useEffect(() => {\r\n        props.setUrl(\"/getWalkSet\")\r\n    }, []);\r\n\r\n    function inputChange(e) {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    function validateIPaddress(ipaddress) {\r\n        if (\r\n            /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\r\n                ipaddress\r\n            )\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Get, Set and Walk {props.text}</h1>\r\n\r\n            <div className=\"exploreContent input contentContainer\">\r\n                <img src={IpIcon} alt=\"IP icon\" />\r\n                <div className=\"description\">\r\n                    <h3>IP Address</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"ex. 127.0.0.1\"\r\n                        onChange={inputChange}\r\n                        value={input}\r\n                    />\r\n                    <div className={valid ? \"validButton\" : \"novalidButton\"}>\r\n                        <ButtonLink\r\n                            title=\"Search\"\r\n                            link={`/getWalkSet/${input}`}\r\n                            valid={valid}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\GetWalkSetIp.js",["87","88"],"import React, { useEffect, useState } from \"react\";\r\nimport InformationContent from \"./InformationContent\";\r\nimport MainInput from \"./MainInput\";\r\nimport IpInput from \"./IpInput\";\r\nimport ReplyTable from \"./ReplyTable\";\r\nimport computer from \"../Images/codeicon.svg\";\r\nimport position from \"../Images/position-icon.svg\";\r\nimport contact from \"../Images/contact-icon.svg\";\r\nimport write from \"../Images/write-icon.svg\";\r\nimport time from \"../Images/time-icon.svg\";\r\nimport finger from \"../Images/finger-icon.svg\";\r\n\r\nexport default function GetWalkSetIp({ match }) {\r\n    const [valid, setValid] = useState(false);\r\n    const [basicContainers, setBasicContainers] = useState([]);\r\n    const [reachable, setReachable] = useState(false);\r\n    const [tableContent, setTableContent] = useState([]);\r\n    const [key, setKey] = useState(-1);\r\n\r\n    const images = [computer, position, contact, write, time, finger];\r\n\r\n    useEffect(() => {\r\n        setValid(validateIPaddress(match.params.ip));\r\n        checkSnmp();\r\n    }, [match.params.ip]);\r\n\r\n    useEffect(() => {\r\n        if (reachable) fetchBasics();\r\n    }, [reachable]);\r\n\r\n    async function checkSnmp() {\r\n        const url = `http://localhost:3001/checkIP/${match.params.ip}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setReachable();\r\n        setReachable(data.snmp);\r\n    }\r\n\r\n    async function fetchBasics() {\r\n        const url = `http://localhost:3001/getBasics/${match.params.ip}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n\r\n        let i = -1;\r\n        setBasicContainers([]);\r\n        setBasicContainers(\r\n            data.map((element) => {\r\n                i++;\r\n                return (\r\n                    <InformationContent\r\n                        src={images[i]}\r\n                        name={element.name}\r\n                        value={element.value}\r\n                        oid={element.oid}\r\n                        key={element.oid}\r\n                    />\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    function validateIPaddress(ipaddress) {\r\n        if (\r\n            /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\r\n                ipaddress\r\n            )\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className={valid ? `main` : `main error`}>\r\n            <h1>\r\n                {valid\r\n                    ? `Get, Set and Walk: ${match.params.ip}`\r\n                    : \"Error: IP Address is not valid\"}\r\n            </h1>\r\n            {reachable ? (\r\n                <div>\r\n                    <div className=\"informationContainers\">\r\n                        {basicContainers}\r\n                    </div>\r\n                    <div className=\"middleContainer\">\r\n                        <MainInput\r\n                            ip={match.params.ip}\r\n                            tableContent={tableContent}\r\n                            setTableContent={setTableContent}\r\n                            key = {key}\r\n                            setKey = {setKey}\r\n                            fetchBasics = {fetchBasics}\r\n                        />\r\n                        <IpInput\r\n                            buttonTitle=\"Change\"\r\n                            title=\"Change IP\"\r\n                            ip={match.params.ip}\r\n                        />\r\n                    </div>\r\n\r\n                    <ReplyTable tableContent={tableContent} />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h1 className=\"error\">\r\n                        Not able to connect to {match.params.ip}\r\n                    </h1>\r\n                    <IpInput\r\n                        buttonTitle=\"Change\"\r\n                        title=\"Change IP\"\r\n                        ip={match.params.ip}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ButtonA.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ButtonLink.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\InformationContent.js",["89"],"import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function InformationContent(props) {\r\n    const [value, setValue] = useState();\r\n\r\n    useEffect(() => {\r\n        if (props.name === \"sysUptime\") {\r\n            setValue(msToTime(props.value * 10));\r\n        } else {\r\n            setValue(props.value);\r\n        }\r\n    }, []);\r\n\r\n    function msToTime(s) {\r\n        var ms = s % 1000;\r\n        s = (s - ms) / 1000;\r\n        var secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        var mins = s % 60;\r\n        var hrs = (s - mins) / 60;\r\n\r\n        return `${hrs}h ${mins}m ${secs}s ${ms}ms`\r\n    }\r\n\r\n    return (\r\n        <div className=\"informationsContent contentContainer\">\r\n            <img src={props.src} alt={props.alt} />\r\n            <div className=\"description\">\r\n                <h3>{props.name}</h3>\r\n                <p>{value}</p>\r\n                <div className=\"oid\">{props.oid}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\IpInput.js",["90"],"import React, { useEffect, useState } from \"react\";\r\nimport ButtonLink from \"./ButtonLink\";\r\nimport IpIcon from \"../Images/ip-icon.svg\";\r\n\r\nexport default function IpInput(props) {\r\n    const [valid, setValid] = useState(false);\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (validateIPaddress(input)) setValid(true);\r\n        else setValid(false);\r\n    }, [input]);\r\n\r\n    useEffect(() => {\r\n        setInput(props.ip);\r\n    }, []);\r\n\r\n    function inputChange(e) {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    function validateIPaddress(ipaddress) {\r\n        if (\r\n            /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\r\n                ipaddress\r\n            )\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"exploreContent inputLeft contentContainer\">\r\n            <div className=\"description\">\r\n                <h3>{props.title}</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"ex. 127.0.0.1\"\r\n                    onChange={inputChange}\r\n                    value={input}\r\n                />\r\n                <div className={valid ? \"validButton\" : \"novalidButton\"}>\r\n                    <ButtonLink\r\n                        title={props.buttonTitle}\r\n                        link={`/getWalkSet/${input}`}\r\n                        valid={valid}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <img src={IpIcon} alt=\"ip icon\" />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ReplyTable.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ReplyTableElement.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\MainInput.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ScanNetwork.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\NetworkInput.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ScanNetworkTable.js",[],"C:\\Users\\Beniamin\\Documents\\WebDevelopment\\SNMP2\\my-app\\src\\Compontents\\ScanNetworkTableElement.js",["91"],"import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function ScanNetworkTableElement({ ip, network, snmp }) {\r\n    const [reachable, setReachable] = useState(false);\r\n\r\n    useEffect(() => checkSnmp(), []);\r\n\r\n    async function checkSnmp() {\r\n        const url = `http://localhost:3001/checkIP/${ip}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setReachable(data.snmp);\r\n    }\r\n\r\n    return (\r\n        <tbody className={`${reachable}`}>\r\n            <tr>\r\n                <td>\r\n                    <p>{ip}</p>\r\n                </td>\r\n                <td>\r\n                    <p>{network}</p>\r\n                </td>\r\n                <td>\r\n                    <p>{`${reachable}`}</p>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    );\r\n}\r\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":16,"column":8,"nodeType":"98","endLine":16,"endColumn":10,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":25,"column":8,"nodeType":"98","endLine":25,"endColumn":25,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":29,"column":8,"nodeType":"98","endLine":29,"endColumn":19,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":12,"column":8,"nodeType":"98","endLine":12,"endColumn":10,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"106","line":16,"column":8,"nodeType":"98","endLine":16,"endColumn":10,"suggestions":"107"},{"ruleId":"96","severity":1,"message":"100","line":6,"column":34,"nodeType":"98","endLine":6,"endColumn":36,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'checkSnmp'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has a missing dependency: 'fetchBasics'. Either include it or remove the dependency array.",["113"],"React Hook useEffect has missing dependencies: 'props.name' and 'props.value'. Either include them or remove the dependency array. If 'setValue' needs the current value of 'props.value', you can also switch to useReducer instead of useState and read 'props.value' in the reducer.",["114"],"React Hook useEffect has a missing dependency: 'props.ip'. Either include it or remove the dependency array. If 'setInput' needs the current value of 'props.ip', you can also switch to useReducer instead of useState and read 'props.ip' in the reducer.",["115"],["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [props]",{"range":"129","text":"130"},"Update the dependencies array to be: [checkSnmp, match.params.ip]",{"range":"131","text":"132"},"Update the dependencies array to be: [fetchBasics, reachable]",{"range":"133","text":"134"},"Update the dependencies array to be: [props.name, props.value]",{"range":"135","text":"136"},"Update the dependencies array to be: [props.ip]",{"range":"137","text":"138"},"Update the dependencies array to be: [checkSnmp]",{"range":"139","text":"140"},[476,478],"[props]",[1019,1036],"[checkSnmp, match.params.ip]",[1111,1122],"[fetchBasics, reachable]",[342,344],"[props.name, props.value]",[465,467],"[props.ip]",[220,222],"[checkSnmp]"]